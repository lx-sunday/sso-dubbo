<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
       

	<bean class="com.sso.client.authc.SSOAuthenticFactory">
	
	  <property name="authenticationConfig">
	        <bean class="com.sso.client.authc.AuthenticationConfig">
	           <property name="loginUrl" value="/login" />
	           <property name="excludeUrls" value="^/$,^/login$,.+\.js,.+\.ico,.+\.css" />
	           <property name="cookieName" value="SSO_PLATEFORM" />
	           <property name="cookieDomain" value="sso.com"></property>
	        </bean>
	    </property> 
	    
        <property name="authenticationCache">
            <bean class="com.sso.client.support.cache.RedisCache" init-method="init">
                <property name="host" value="127.0.0.1"/>
                <property name="port" value="6379"/>
                <property name="timeout" value="7200"/>
            </bean>
        </property>
        
        <property name="ssoUserService" ref="ssoUserService"/>
    </bean>

	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean class="com.sso.client.filter.WebAuthenticationHandler" />
	</mvc:interceptors>

    <import resource="dubbo/dubbo-consumer.xml"/>
</beans>